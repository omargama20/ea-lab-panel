// app/copilot/page.tsx
'use client';
import { useState } from 'react';

export default function CopilotPage() {
  const [mode, setMode] = useState<'code'|'smc'|'mkt'>('code');
  const [language, setLanguage] = useState('plaintext');
  const [filename, setFilename] = useState('scratch.txt');
  const [prefix, setPrefix] = useState('');
  const [suffix, setSuffix] = useState('');
  const [out, setOut] = useState('');
  const [loading, setLoading] = useState(false);

  async function complete() {
    setLoading(true);
    setOut('');
    const r = await fetch('/api/complete', {
      method: 'POST', headers: {'Content-Type':'application/json'},
      body: JSON.stringify({ mode, language, filename, prefix, suffix, max_tokens: 128, temperature: 0.2 })
    });
    const data = await r.json();
    setLoading(false);
    if (r.status === 402) { alert('Sin créditos. Recarga en Pricing.'); return; }
    if (!r.ok) { alert(data.error || 'Error'); return; }
    setOut(data.text || '');
  }

  return (
    <main className="mx-auto max-w-4xl p-6">
      <h1 className="text-2xl font-semibold">Copilot SMC</h1>

      <div className="mt-4 grid md:grid-cols-4 gap-4">
        <label className="block">Modo
         <select
  className="w-full mt-1 p-2 bg-neutral-900 rounded"
  value={mode}
  onChange={e => setMode(e.target.value)}
>
  <option value="code">Code / EA</option>
  <option value="smc">SMC Analyst</option>
  <option value="mkt">Marketing</option>
</select>
        </label>
        <label className="block">Language
          <input className="w-full mt-1 p-2 bg-neutral-900 rounded" value={language} onChange={e=>setLanguage(e.target.value)} />
        </label>
        <label className="block">Archivo
          <input className="w-full mt-1 p-2 bg-neutral-900 rounded" value={filename} onChange={e=>setFilename(e.target.value)} />
        </label>
      </div>

      <div className="mt-4 grid md:grid-cols-2 gap-4">
        <label className="block">Prefix (antes del cursor)
          <textarea className="w-full h-40 mt-1 p-2 bg-neutral-900 rounded" value={prefix} onChange={e=>setPrefix(e.target.value)} />
        </label>
        <label className="block">Suffix (después del cursor)
          <textarea className="w-full h-40 mt-1 p-2 bg-neutral-900 rounded" value={suffix} onChange={e=>setSuffix(e.target.value)} />
        </label>
      </div>

      <button className="mt-4 px-4 py-2 rounded bg-emerald-600" disabled={loading} onClick={complete}>
        {loading ? 'Generando…' : 'Sugerir'}
      </button>

      <div className="mt-4">
        <label className="block">Salida</label>
        <pre className="mt-1 p-3 bg-black rounded overflow-auto">{out}</pre>
      </div>
    </main>
  );
}
